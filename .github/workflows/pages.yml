name: Github Pages

on:
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Cache system dependencies
        uses: actions/cache@v3
        with:
          path: /var/cache/apt/archives
          key: ${{ runner.os }}-apt-${{ hashFiles('**/apt-packages.txt') }}
          restore-keys: |
            ${{ runner.os }}-apt-

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libgtk-3-dev \
            libwebkit2gtk-4.0-dev \
            libayatana-appindicator3-dev \
            librsvg2-dev \
            libjavascriptcoregtk-4.0-dev \
            libsoup2.4-dev \
            libglib2.0-dev \
            libatk1.0-dev \
            libpango1.0-dev \
            libcairo2-dev \
            libgdk-pixbuf2.0-dev \
            libwayland-dev \
            libxkbcommon-dev \
            libjavascriptcoregtk-4.1-dev \
            libsoup-3.0-dev \
            libwebkit2gtk-4.1-dev \
            libxdo-dev \
            clang \
            llvm \
            libclang-dev \
            libffi-dev \
            libc6-dev \
            zlib1g-dev \
            libjpeg-dev \
            libpng-dev \
            libwebp-dev \
            pkg-config \
            openssl \
            cmake \
            libgl1-mesa-dev \
            libx11-dev \
            libxcursor-dev \
            libxrandr-dev \
            libxi-dev \
            libxinerama-dev \
            libxext-dev \
            libxfixes-dev \
            libglvnd-dev \
            libvulkan-dev \
            vulkan-tools \
            vulkan-validationlayers \
            fuse \
            gcc

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: wasm32-unknown-unknown
      
      - name: Rust Cache
        uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true
      
      - name: Cache Dioxus CLI
        uses: actions/cache@v3
        with:
          path: ~/.cargo/bin/dx
          key: ${{ runner.os }}-dioxus-cli-${{ hashFiles('**/Cargo.lock') }}

      - name: Install Dioxus CLI
        run: cargo install dioxus-cli
        if: steps.cache-dioxus-cli.outputs.cache-hit != 'true'
      
      - name: Build
        run: dx build --release --platform web
        env:
          PUBLIC_URL: "https://mylife.waozi.xyz"
      
      - name: Create CNAME file
        run: echo "mylife.waozi.xyz" > dist/CNAME
      
      - name: Deploy
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: dist
          single-commit: true